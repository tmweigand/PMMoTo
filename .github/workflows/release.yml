name: Build and Release

on:
  push:
    tags:
      - "v*.*.*" # Trigger on tags like v0.1.5

jobs:
  build-and-release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Only needed for macOS â€“ cibuildwheel uses system Python
      - name: Set up Python (macOS only)
        if: matrix.os == 'macos-latest'
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Show Python and pip versions
        run: |
          python --version
          python -m pip --version
          python -m pip list

      - name: Install cibuildwheel and twine
        run: python -m pip install --upgrade pip cibuildwheel twine

      - name: Build wheels
        env:
          CIBW_BUILD: "cp310-* cp311-* cp312-*"
          CIBW_SKIP: "*-musllinux*"
          CIBW_ARCHS_MACOS: "x86_64 arm64 universal2"
          CIBW_ARCHS_LINUX: "x86_64"
          CIBW_PLATFORM: ${{ matrix.os == 'ubuntu-latest' && 'linux' || 'macos' }}
        run: python -m cibuildwheel --output-dir wheelhouse

      - name: Debug wheelhouse contents
        run: ls -lh wheelhouse

      - name: Show CIBW build identifiers
        run: python -m cibuildwheel --print-build-identifiers

      - name: Check wheels with twine
        run: python -m twine check wheelhouse/*

      - name: Publish wheels to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: python -m twine upload --verbose wheelhouse/*

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
