[tox]
minversion = 3.0.0
envlist = py310, py311, py312, lint, doccheck, coverage, mypy, black
isolated_build = true

[gh-actions]
python =
    3.10: py310
    3.11: py311
    3.12: py312

[testenv]
description = Run unit tests with MPI
install_command = pip install --no-cache-dir --force-reinstall --no-binary=mpi4py {opts} {packages}
deps =
    mpi4py 
    -rrequirements_dev.txt
setenv =
    PYTHONPATH = {toxinidir}
    HOME = {env:HOME}
allowlist_externals =
    mpirun
    bash
commands =
    mpirun --version
    pytest tests/
    mpirun -n 1 {envpython} -m pytest tests/ --only-mpi
    mpirun -n 2 {envpython} -m pytest tests/ --only-mpi
    bash -c 'if mpirun --version 2>/dev/null | grep -qi "open mpi"; then CMD="mpirun --oversubscribe"; else CMD="mpirun"; fi; $CMD -n 4 python -m pytest tests/ --only-mpi'
    bash -c 'if mpirun --version 2>/dev/null | grep -qi "open mpi"; then CMD="mpirun --oversubscribe"; else CMD="mpirun"; fi; $CMD -n 8 python -m pytest tests/ --only-mpi'

[testenv:lint]
description = Run Ruff linter on code and docstrings
deps = ruff
commands =
    ruff check src/

[testenv:doccheck]
description = Check Python docstring coverage with interrogate
deps = interrogate
commands =
    interrogate src/ --fail-under=90 --verbose --exclude "src/pmmoto/io/evtk"

[testenv:coverage]
deps =
    pytest
    pytest-cov
    pytest-mpi
    -rrequirements_dev.txt
usedevelop = True
setenv =
    PYTHONPATH = {toxinidir}/src
    COVERAGE_PROCESS_START = {toxinidir}/.coveragerc
    MPI_RUN_CMD = bash -ec ' \
        if mpirun --version 2>/dev/null | grep -qi "open mpi"; then \
            exec mpirun --oversubscribe "$$@"; \
        else \
            exec mpirun "$$@"; \
        fi' --
allowlist_externals =
    mpirun
    bash
commands =
    coverage run --parallel-mode --source=pmmoto -m pytest tests/
    mpirun -n 1 {envpython} -m coverage run --parallel-mode --source=pmmoto -m pytest tests/ --only-mpi
    mpirun -n 2 {envpython} -m coverage run --parallel-mode --source=pmmoto -m pytest tests/ --only-mpi
    mpirun -n 4 {envpython} -m coverage run --parallel-mode --source=pmmoto -m pytest tests/ --only-mpi
    mpirun -n 8 {envpython} -m coverage run --parallel-mode --source=pmmoto -m pytest tests/ --only-mpi
    coverage combine
    coverage report --fail-under=80
    coverage html

[testenv:mypy]
description = Run mypy type checks
deps =
    mypy
    scipy-stubs
    -rrequirements_dev.txt
commands =
    mypy src/

[testenv:black]
description = Check code formatting with black
deps = black
commands =
    black --check src/
